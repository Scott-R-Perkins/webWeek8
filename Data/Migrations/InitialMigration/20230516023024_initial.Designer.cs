// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webWeek8.Data;

#nullable disable

namespace webWeek8.Data.Migrations.InitialMigration
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20230516023024_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webWeek8.Models.Course", b =>
                {
                    b.Property<int>("courseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("courseId"));

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("courseId");

                    b.ToTable("Course_1");

                    b.HasData(
                        new
                        {
                            courseId = 710,
                            name = "Web applications"
                        },
                        new
                        {
                            courseId = 721,
                            name = "Software engineering"
                        },
                        new
                        {
                            courseId = 701,
                            name = "Project"
                        });
                });

            modelBuilder.Entity("webWeek8.Models.Student", b =>
                {
                    b.Property<int>("studentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("studentId"));

                    b.Property<int?>("courseId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("studentId");

                    b.HasIndex("courseId")
                        .IsUnique()
                        .HasFilter("[courseId] IS NOT NULL");

                    b.ToTable("Student_1");

                    b.HasData(
                        new
                        {
                            studentId = 1,
                            name = "Scott"
                        },
                        new
                        {
                            studentId = 2,
                            name = "Bob"
                        },
                        new
                        {
                            studentId = 3,
                            name = "James"
                        });
                });

            modelBuilder.Entity("webWeek8.Models.Tutor", b =>
                {
                    b.Property<int>("tutorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tutorId"));

                    b.Property<int?>("courseId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tutorId");

                    b.HasIndex("courseId")
                        .IsUnique()
                        .HasFilter("[courseId] IS NOT NULL");

                    b.ToTable("Tutor_1");

                    b.HasData(
                        new
                        {
                            tutorId = 1,
                            name = "Josh"
                        },
                        new
                        {
                            tutorId = 2,
                            name = "Oliver"
                        },
                        new
                        {
                            tutorId = 3,
                            name = "Abdul"
                        });
                });

            modelBuilder.Entity("webWeek8.Models.Student", b =>
                {
                    b.HasOne("webWeek8.Models.Course", null)
                        .WithOne("studentId")
                        .HasForeignKey("webWeek8.Models.Student", "courseId");
                });

            modelBuilder.Entity("webWeek8.Models.Tutor", b =>
                {
                    b.HasOne("webWeek8.Models.Course", null)
                        .WithOne("tutorId")
                        .HasForeignKey("webWeek8.Models.Tutor", "courseId");
                });

            modelBuilder.Entity("webWeek8.Models.Course", b =>
                {
                    b.Navigation("studentId");

                    b.Navigation("tutorId");
                });
#pragma warning restore 612, 618
        }
    }
}
